package java;


//1.    287 寻找重复数     A
//2.	142 环形链表Ⅱ     A
//4.	238 除自身以外数组的乘积  A
//5.	39 组合总和            A
//6.	92 反转链表Ⅱ        A
//7.	64 最小路径和          A
//8.	102 二叉树的层序遍历    A
//9.	151 翻转字符串里的单词  A
//10.	16 最接近的三数之和
//11.	62 不同路径          A
//12.	61 旋转链表          A  - 成环;
//13.	240 搜索二维矩阵Ⅱ        A
//14.	231 2的幂              A
//15.	56 合并区间              A
//16.	76 最小覆盖子串           A
//17.	235 二叉搜索树的最近公共祖先 A
//18.	28 实现strStr()
//19.	84 柱状图中的最大矩形
//20.	199 二叉树的右视图        A
//1.    129. 求根到叶子节点数字之和 A-
//2.    135. 分发糖果
//3.    141. 环形链表            A
//4.    142. 环形链表 II         A
//5.    143. 重排链表            A   - 找到中间节点 在反转;
//6.    144. 二叉树的前序遍历      A
//7.    146. LRU 缓存机制        A
//8.    148. 排序链表            A
//9.    160. 相交链表             A
//10.   167. 两数之和 II - 输入有序数组   A
//13.   179. 最大数           A   - 考虑00的情况;
//14.   180. 连续出现的数字        A
//17.   191. 位1的个数           A
//18.   192. 统计词频              A
//19.   199. 二叉树的右视图         A
//20.   200. 岛屿数量              A
//      92. 复原IP地址            A

import javabean.ListNode;
import javabean.TreeNode;

import java.util.*;

public class Page4 {
    public List<Integer> postorderTraversal(TreeNode root) {
        List<Integer> ans = new ArrayList<>();
        if (root == null) {
            return ans;
        }

        return null;
    }




}
